# core/llm/embedding_model.py

import logging
from typing import List, Union
from core.live_config import config

import numpy as np
from openai import OpenAI

client = OpenAI(api_key=config.get("openai_api_key"))


def embed_text(text: Union[str, List[str]]) -> Union[np.ndarray, List[np.ndarray]]:
    """
    Embed text using OpenAI 'text-embedding-ada-002'.
    """
    if not text:
        return np.zeros(768)

    if isinstance(text, str):
        texts = [text]
    else:
        texts = text

    try:
        response = client.embeddings.create(input=texts,
        model="text-embedding-ada-002")
        vectors = [np.array(e["embedding"]) for e in response.data]
        return vectors[0] if isinstance(text, str) else vectors

    except Exception as e:
        logging.warning(f"[EmbeddingModel] OpenAI embed failed: {e}")
        fallback = [np.zeros(768) for _ in texts]
        return fallback[0] if isinstance(text, str) else fallback
